name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [20]
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies for API
        run: |
          cd api
          npm install

      - name: Install dependencies for Client
        run: |
          cd client
          npm install

      - name: Install wait-on in Root
        run: |
          npm install wait-on --save-dev

      - name: Run API tests
        run: |
          cd api
          npm run test:coverage

      - name: Upload coverage to Codecov
        if: matrix.os == 'ubuntu-latest'
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./api/coverage/lcov.info
          fail_ci_if_error: true

      - name: Start API, Client and Run Cypress on Linux/macOS
        if: runner.os != 'Windows'
        run: |
          echo "Starting API and Client on Unix-like OS"
          export PORT=3000
          export VUE_APP_API_URL=http://localhost:3000
          export JWT_SECRET="${{ secrets.JWT_SECRET }}"
          export JWT_EXPIRATION=${{ secrets.JWT_EXPIRATION }}
          cd api
          nohup npm start > ../api.log 2> ../api_error.log &
          API_PID=$!
          echo "API started with PID $API_PID"
          cd ../client
          nohup npm run dev -- --port 8080 --host 0.0.0.0 > ../client.log 2> ../client_error.log &
          CLIENT_PID=$!
          echo "Client started with PID $CLIENT_PID"
          sleep 15
          if curl -s http://localhost:3000 > /dev/null; then
            echo "API is up"
          else
            echo "API is not up yet, waiting..."
            npx wait-on --timeout 120000 http://localhost:3000
          fi
          if curl -s http://localhost:8080 > /dev/null; then
            echo "Client is up"
          else
            echo "Client is not up yet, waiting..."
            npx wait-on --timeout 120000 http://localhost:8080
          fi
          npx cypress run
        shell: bash
        env:
          CI: true
          CYPRESS_BASE_URL: 'http://localhost:8080'
          PORT: 3000
          VUE_APP_API_URL: 'http://localhost:3000'
          JWT_SECRET: "${{ secrets.JWT_SECRET }}"
          JWT_EXPIRATION: ${{ secrets.JWT_EXPIRATION }}

      - name: Start API, Client and Run Cypress on Windows
        if: runner.os == 'Windows'
        run: |
          Write-Output "Starting API and Client on Windows"
          $env:PORT = "3000"
          $env:VUE_APP_API_URL = "http://localhost:3000"
          $env:JWT_SECRET = ${{ secrets.JWT_SECRET }}
          $env:JWT_EXPIRATION = ${{ secrets.JWT_EXPIRATION }}
          
          # Start API
          Write-Output "Starting API..."
          Start-Process -NoNewWindow -FilePath "npm" `
            -ArgumentList "start" `
            -WorkingDirectory "api" `
            -RedirectStandardOutput "api.log" `
            -RedirectStandardError "api_error.log" `
            -PassThru | Out-Null
          Write-Output "API process started"

          # Start Client
          Write-Output "Starting Client..."
          Start-Process -NoNewWindow -FilePath "npm" `
            -ArgumentList "run dev -- --port 8080 --host 0.0.0.0" `
            -WorkingDirectory "client" `
            -RedirectStandardOutput "client.log" `
            -RedirectStandardError "client_error.log" `
            -PassThru | Out-Null
          Write-Output "Client process started"

          # Wait for API to be available
          Write-Output "Waiting for API to be available on http://localhost:3000 ..."
          try {
            npx wait-on --timeout 120000 --httpTimeout 10000 http://localhost:3000
            Write-Output "API is up"
          } catch {
            Write-Output "API failed to start within timeout. Last 20 lines of api_error.log:"
            Get-Content -Path "api_error.log" -Tail 20
            Exit 1
          }

          # Wait for Client to be available
          Write-Output "Waiting for Client to be available on http://localhost:8080 ..."
          try {
            npx wait-on --timeout 120000 --httpTimeout 10000 http://localhost:8080
            Write-Output "Client is up"
          } catch {
            Write-Output "Client failed to start within timeout. Last 20 lines of client_error.log:"
            Get-Content -Path "client_error.log" -Tail 20
            Exit 1
          }

          # Run Cypress
          Set-Location -Path "client"
          Write-Output "Running Cypress tests..."
          npx cypress run
        shell: powershell
        env:
          CI: true
          CYPRESS_BASE_URL: 'http://localhost:8080'
          PORT: 3000
          VUE_APP_API_URL: 'http://localhost:3000'
          JWT_SECRET: "${{ secrets.JWT_SECRET }}"
          JWT_EXPIRATION: "${{ secrets.JWT_EXPIRATION }}"
